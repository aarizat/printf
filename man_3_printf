.TH man 1 "20 Julio 2020" "1.0" "_printf man page"
.SH NAME
_printf - format and print data
.SH SYNOPSIS

#include <holberton.h>

int _printf(const char *format, ...);

.SH DESCRIPTION
      The function in the _printf() produce output according to a format as described below.  The function _printf() write output to stdout, the standard output stream.

      This function writes the output under the control of a format string that specifies how subsequent arguments (or arguments accessed via the variable-length argument facilities of stdarg(3)) are converted for output.

.SS Format of the format string
The format string is a character string, beginning and ending in its initial shift state, if any. The format string is composed of zero or more directives: ordinary characters (not %), which are copied unchanged to the output stream; and conversion specifications, each of which results in fetching zero or more subsequent arguments. Each conversion specification is introduced by the character %, and ends with a conversion specifier.  

The arguments must correspond properly (after type promotion) with the conversion specifier.  By default, the arguments are used in the order given, and each conversion specifier asks for the next argument (and it is an error if insufficiently many arguments are given).

.SS Conversion specifiers

A character that specifies the type of conversion to be applied.  The conversion specifiers and their meanings are:

d, i  The int argument is converted to signed decimal notation. 

c     The int argument is converted to an unsigned char, and the resulting character is written.

s     The const char * argument is expected to be a pointer to an array of character type (pointer to a string).  Characters from the array are written up to (but not including) a terminating null byte ('\0').

%     A '%' is written.  No argument is converted.  The complete conversion specification is '%%'.

.SH RETURN VALUE

Upon successful return, these functions return the number of characters printed (excluding the null byte used to end output to strings).

If an output error is encountered, a negative value is returned.

.SH EXAMPLE

To print the string "Hello World" followed by a new line:

.SS Option 1:

 # include <stdio.h>
 # include "holberton.h"

int main()
 {
 _printf("Hello World\\n");
 return (0);
 }

.SS Option 2:

 # include <stdio.h>
 # include "holberton.h"

int main()
 {
  char *s = "Hello World\\n";

 _printf("%s", s);
 return (0);
 }

.SH AUTHORS
Written by Andr√©s Ariza and Ana Morales.